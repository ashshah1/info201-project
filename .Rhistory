boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "date")) %>%
filter(year == "2018")
View(boston_new)
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
mutate(Date = as.Date(full_date, format = "%m/%d/%Y"))
View(boston_new)
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
mutate(Date = as.Date(full_date, format = "%m/%d/%y"))
View(boston_new)
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
mutate(Date = format(as.Date(full_date, "%m/%d/%y")))
View(boston_new)
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
# mutate(Date = format(as.Date(full_date, "%m/%d/%y")))
mutate(Date = substr(full_date, 0, 9))
View(boston_new)
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
# mutate(Date = format(as.Date(full_date, "%m/%d/%y")))
mutate(Date = substr(full_date, 0, 10))
View(boston_new)
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
mutate(Date = substr(full_date, 0, 10)) %>%
select(Date, Offense_Type, Longitude, Latitude, ID)
View(boston_new)
boston_data_raw <- read.csv("boston.csv", stringsAsFactors = FALSE)
# Select 5 columns.
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
mutate(Date = substr(full_date, 0, 10)) %>%
select(Date, Offense_Type, Longitude, Latitude, ID)
write.csv(denver_crime, file = "datasets/boston_crime_2.csv")
boston_data_raw <- read.csv("boston.csv", stringsAsFactors = FALSE)
# Select 5 columns.
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
mutate(Date = substr(full_date, 0, 10)) %>%
select(Date, Offense_Type, Longitude, Latitude, ID)
write.csv(denver_crime, file = "datasets/boston_crime_2.csv")
# Manipulating the raw data to get it in a readable format
# that we can use for our visualizations and conclusions.
library("dplyr")
library("tidyr")
weather_data <- function(city, weather, temp){
query <- paste("datasets/WeatherData_", city, ".csv", sep = "")
weather_raw <- read.csv(query, stringsAsFactors = FALSE)
weather_raw <- within(weather_raw, rm(WT01, WT02, WT04))
weather_result <- weather_raw %>%
filter(!is.na(TMAX) & !is.na(TMIN)) %>%
filter(substr(NAME, 1,3) == toupper(substr(city, 1, 3)))
if (identical(weather, "Rain")) {
weather_find <- weather_result %>%
filter(PRCP == max(PRCP, na.rm = TRUE)) %>%
pull(DATE)
} else if (identical(weather, "Wind")) {
weather_find <- weather_result %>%
filter(AWND == max(AWND, na.rm = TRUE)) %>%
pull(DATE)
} else if (identical(weather, "Snow")) {
weather_find <- weather_result %>%
filter(SNOW == max(SNOW, na.rm = TRUE)) %>%
pull(DATE)
} else if (identical(weather, "Thunder")) {
weather_find <- weather_result %>%
filter(WT03 != 0) %>%
filter(AWND == max(AWND, na.rm = TRUE)) %>%
filter(PRCP == max(PRCP, na.rm = TRUE)) %>%
pull(DATE)
} else if (identical(weather, "None")) {
weather_find <- weather_result %>%
mutate(close = (temp - TMAX)) %>%
filter(close == min(abs(close), na.rm = TRUE)) %>%
filter(PRCP == min(PRCP, na.rm = TRUE)) %>%
slice(1) %>%
pull(DATE)
}
weather_find
}
# Dataset Aggregation of Austin, Denver, Boston, Chicago, Seattle crime raw
# datasets into 5 columns (ID, Date, Offense_Type, Longitude, Latitude) for 2018.
# Cleaning up the Austin crime dataset.
# Import .csv file of raw data.
austin_crime_raw <- read.csv("austin.csv", stringsAsFactors = FALSE)
# Filter data set and create new formatted 'Date' column.
austin_crime <- austin_crime_raw %>%
mutate(Date = format(as.Date(Occurred.Date, "%m/%d/%Y"))) %>%
select(Highest.Offense.Description, Incident.Number, Longitude,
Latitude, Date) %>%
rename(ID = Incident.Number, Offense_Type = Highest.Offense.Description)
write.csv(austin_crime, file = "datasets/austin_crime.csv")
# Cleaning up the Denver dataset.
# Import .csv file of raw data.
denver_crime_raw <- read.csv("denver.csv", stringsAsFactors = FALSE)
# Filter data for 2018 and format new 'Date' column.
denver_crime <- denver_crime_raw %>%
mutate(occurred_on = FIRST_OCCURRENCE_DATE) %>%
separate(FIRST_OCCURRENCE_DATE, c("m", "d", "year")) %>%
filter(year == "18") %>%
filter(IS_CRIME == 1) %>%
mutate(Date = format(as.Date(occurred_on, "%m/%d/%y"))) %>%
select(INCIDENT_ID, OFFENSE_CATEGORY_ID, GEO_LON, GEO_LAT, Date) %>%
rename(ID = INCIDENT_ID, Offense_Type =  OFFENSE_CATEGORY_ID,
Longitude = GEO_LON, Latitude = GEO_LAT)
write.csv(denver_crime, file = "datasets/denver_crime.csv")
# Cleaning up the Boston dataset.
# Import .csv file of raw data.
boston_data_raw <- read.csv("boston.csv", stringsAsFactors = FALSE)
# Select 5 columns.
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
mutate(Date = substr(full_date, 0, 10)) %>%
select(Date, Offense_Type, Longitude, Latitude, ID)
write.csv(boston_new, file = "datasets/boston_crime_2.csv")
# Format new 'Date' column and filter for 2018 data.
# boston_df_new <- boston_new %>%
#   mutate(full_date = Date) %>%
#   separate(Date, c("month", "date", "year")) %>%
#   filter(year == "2018") %>%
#   select(full_date, Offense_Type, Longitude, Latitude, ID) %>%
#   mutate(Date = as.Date(full_date, format = "%m/%d/%Y")) %>%
#   select(Date, Offense_Type, Longitude, Latitude, ID)
#
# Cleaning up the Chicago dataset.
# Read .csv file of raw data.
boston_data_raw <- read.csv("datasets/chicago_crime.csv", stringsAsFactors = FALSE)
# Select 5 columns.
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = "INCIDENT_NUMBER", Date = "OCCURRED_ON_DATE",
Offense_Type = "OFFENSE_DESCRIPTION", Latitude = "Lat", Longitude = "Long")
# Filter data for 2018 and format a new 'Date' column.
boston_df_new <- boston_new %>%
mutate(full_date = Date) %>%
separate(Date, c("month", "date", "year")) %>%
filter(year == "2018") %>%
select(full_date, Offense_Type, Longitude, Latitude, ID) %>%
mutate(Date = as.Date(full_date, format = "%m/%d/%Y")) %>%
select(Date, Offense_Type, Longitude, Latitude, ID)
# Cleaning Seattle dataset.
# seattle_crime_raw <- read.csv("Crime_Data.csv", stringsAsFactors = FALSE)
#
# seattle_crime <- seattle_crime_raw %>%
#   mutate(occurred_on = Occurred.Date) %>%
#   separate(occurred_on, c("month", "day", "year")) %>%
#   filter(year == "2018") %>%
#   select(Report.Number, Occurred.Date, Crime.Subcategory)
boston_data_raw <- read.csv("boston.csv", stringsAsFactors = FALSE)
# Select 5 columns.
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
mutate(Date = substr(full_date, 0, 10)) %>%
select(Date, Offense_Type, Longitude, Latitude, ID)
write.csv(boston_new, file = "datasets/boston_crime_2.csv")
# Manipulating the raw data to get it in a readable format
# that we can use for our visualizations and conclusions.
library("dplyr")
library("tidyr")
weather_data <- function(city, weather, temp){
query <- paste("datasets/WeatherData_", city, ".csv", sep = "")
weather_raw <- read.csv(query, stringsAsFactors = FALSE)
weather_raw <- within(weather_raw, rm(WT01, WT02, WT04))
weather_result <- weather_raw %>%
filter(!is.na(TMAX) & !is.na(TMIN)) %>%
filter(substr(NAME, 1,3) == toupper(substr(city, 1, 3)))
if (identical(weather, "Rain")) {
weather_find <- weather_result %>%
filter(PRCP == max(PRCP, na.rm = TRUE)) %>%
pull(DATE)
} else if (identical(weather, "Wind")) {
weather_find <- weather_result %>%
filter(AWND == max(AWND, na.rm = TRUE)) %>%
pull(DATE)
} else if (identical(weather, "Snow")) {
weather_find <- weather_result %>%
filter(SNOW == max(SNOW, na.rm = TRUE)) %>%
pull(DATE)
} else if (identical(weather, "Thunder")) {
weather_find <- weather_result %>%
filter(WT03 != 0) %>%
filter(AWND == max(AWND, na.rm = TRUE)) %>%
filter(PRCP == max(PRCP, na.rm = TRUE)) %>%
pull(DATE)
} else if (identical(weather, "None")) {
weather_find <- weather_result %>%
mutate(close = (temp - TMAX)) %>%
filter(close == min(abs(close), na.rm = TRUE)) %>%
filter(PRCP == min(PRCP, na.rm = TRUE)) %>%
slice(1) %>%
pull(DATE)
}
weather_find
}
# Dataset Aggregation of Austin, Denver, Boston, Chicago, Seattle crime raw
# datasets into 5 columns (ID, Date, Offense_Type, Longitude, Latitude) for 2018.
# Cleaning up the Austin crime dataset.
# Import .csv file of raw data.
austin_crime_raw <- read.csv("austin.csv", stringsAsFactors = FALSE)
# Filter data set and create new formatted 'Date' column.
austin_crime <- austin_crime_raw %>%
mutate(Date = format(as.Date(Occurred.Date, "%m/%d/%Y"))) %>%
select(Highest.Offense.Description, Incident.Number, Longitude,
Latitude, Date) %>%
rename(ID = Incident.Number, Offense_Type = Highest.Offense.Description)
write.csv(austin_crime, file = "datasets/austin_crime.csv")
# Cleaning up the Denver dataset.
# Import .csv file of raw data.
denver_crime_raw <- read.csv("denver.csv", stringsAsFactors = FALSE)
# Filter data for 2018 and format new 'Date' column.
denver_crime <- denver_crime_raw %>%
mutate(occurred_on = FIRST_OCCURRENCE_DATE) %>%
separate(FIRST_OCCURRENCE_DATE, c("m", "d", "year")) %>%
filter(year == "18") %>%
filter(IS_CRIME == 1) %>%
mutate(Date = format(as.Date(occurred_on, "%m/%d/%y"))) %>%
select(INCIDENT_ID, OFFENSE_CATEGORY_ID, GEO_LON, GEO_LAT, Date) %>%
rename(ID = INCIDENT_ID, Offense_Type =  OFFENSE_CATEGORY_ID,
Longitude = GEO_LON, Latitude = GEO_LAT)
write.csv(denver_crime, file = "datasets/denver_crime.csv")
# Cleaning up the Boston dataset.
# Import .csv file of raw data.
boston_data_raw <- read.csv("boston.csv", stringsAsFactors = FALSE)
# Select 5 columns.
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = INCIDENT_NUMBER, Date = OCCURRED_ON_DATE,
Offense_Type = OFFENSE_DESCRIPTION, Latitude = Lat, Longitude = Long) %>%
mutate(full_date = Date) %>%
separate(Date, c("year", "month", "d")) %>%
filter(year == "2018") %>%
mutate(Date = substr(full_date, 0, 10)) %>%
select(Date, Offense_Type, Longitude, Latitude, ID)
write.csv(boston_new, file = "datasets/boston_crime_2.csv")
# Format new 'Date' column and filter for 2018 data.
# boston_df_new <- boston_new %>%
#   mutate(full_date = Date) %>%
#   separate(Date, c("month", "date", "year")) %>%
#   filter(year == "2018") %>%
#   select(full_date, Offense_Type, Longitude, Latitude, ID) %>%
#   mutate(Date = as.Date(full_date, format = "%m/%d/%Y")) %>%
#   select(Date, Offense_Type, Longitude, Latitude, ID)
#
# Cleaning up the Chicago dataset.
# Read .csv file of raw data.
boston_data_raw <- read.csv("datasets/chicago_crime.csv", stringsAsFactors = FALSE)
# Select 5 columns.
boston_new <- boston_data_raw %>%
select(INCIDENT_NUMBER, Long, Lat, OCCURRED_ON_DATE, OFFENSE_DESCRIPTION) %>%
rename(ID = "INCIDENT_NUMBER", Date = "OCCURRED_ON_DATE",
Offense_Type = "OFFENSE_DESCRIPTION", Latitude = "Lat", Longitude = "Long")
# Filter data for 2018 and format a new 'Date' column.
boston_df_new <- boston_new %>%
mutate(full_date = Date) %>%
separate(Date, c("month", "date", "year")) %>%
filter(year == "2018") %>%
select(full_date, Offense_Type, Longitude, Latitude, ID) %>%
mutate(Date = as.Date(full_date, format = "%m/%d/%Y")) %>%
select(Date, Offense_Type, Longitude, Latitude, ID)
# Cleaning Seattle dataset.
# seattle_crime_raw <- read.csv("Crime_Data.csv", stringsAsFactors = FALSE)
#
# seattle_crime <- seattle_crime_raw %>%
#   mutate(occurred_on = Occurred.Date) %>%
#   separate(occurred_on, c("month", "day", "year")) %>%
#   filter(year == "2018") %>%
#   select(Report.Number, Occurred.Date, Crime.Subcategory)
setwd("~/Desktop/info201/info201-project")
chicago_raw <- read.csv("chicago_crime.csv", stringsAsFactors = FALSE)
chicago_raw <- read.csv("chicago.csv", stringsAsFactors = FALSE)
View(chicago_raw)
chicago_new <- chicago_raw %>%
select(Case.Number, Latitude, Longitude, Date, Primary.Type) %>%
mutate(date_duplicate = Date) %>%
separate(Date, c("month, date, year"))
chicago_new <- chicago_raw %>%
select(Case.Number, Latitude, Longitude, Date, Primary.Type) %>%
mutate(date_duplicate = Date) %>%
separate(Date, c("month", "date", "year"))
View(chicago_new)
chicago_new <- chicago_raw %>%
select(Case.Number, Latitude, Longitude, Date, Primary.Type) %>%
mutate(date_duplicate = Date) %>%
separate(Date, c("month", "date", "year")) %>%
filter(year == "2018")
View(chicago_new)
nrows(chicago_new)
nrow(chicago_new)
chicago_new <- chicago_raw %>%
select(Case.Number, Latitude, Longitude, Date, Primary.Type) %>%
mutate(date_duplicate = Date) %>%
separate(Date, c("month", "date", "year")) %>%
filter(year == "2018") %>%
filter(Latitude != NA)
View(chicago_new)
chicago_new <- chicago_raw %>%
select(Case.Number, Latitude, Longitude, Date, Primary.Type) %>%
mutate(date_duplicate = Date) %>%
separate(Date, c("month", "date", "year")) %>%
filter(year == "2018") %>%
mutate(Date = as.Date(date_duplicate, format = "%m/%d/%Y")) %>%
select(Date, Case.Number, Latitude, Longitude, Primary.Type)
View(chicago_new)
hicago_new <- chicago_raw %>%
select(Case.Number, Latitude, Longitude, Date, Primary.Type) %>%
mutate(date_duplicate = Date) %>%
separate(Date, c("month", "date", "year")) %>%
filter(year == "2018") %>%
mutate(Date = as.Date(date_duplicate, format = "%m/%d/%Y")) %>%
select(Date, Case.Number, Latitude, Longitude, Primary.Type) %>%
rename(ID = Case.Number, Offense_Type = Primary.Type)
View(chicago_new)
na.omit(chicago_new)
View(chicago_new)
chicago_newer <- na.omit(chicago_new)
View(chicago_newer)
nrow(chicago_newer)
chicago_raw <- read.csv("chicago.csv", stringsAsFactors = FALSE)
chicago_new <- chicago_raw %>%
select(Case.Number, Latitude, Longitude, Date, Primary.Type) %>%
mutate(date_duplicate = Date) %>%
separate(Date, c("month", "date", "year")) %>%
filter(year == "2018") %>%
mutate(Date = as.Date(date_duplicate, format = "%m/%d/%Y")) %>%
select(Date, Case.Number, Latitude, Longitude, Primary.Type) %>%
rename(ID = Case.Number, Offense_Type = Primary.Type)
chicago_newer <- na.omit(chicago_new)
write.csv(chicago_newer, file = "datasets/chicago_crime_2.csv")
shiny::runApp()
# server for the shiny app
source("data_handling.R")
my_server <- function(input, output) {
output$leaf_map <- renderLeaflet(crimemap(input$city,
weather_data(input$city, input$weather,
input$temperature)))
output$temp_plot <- renderPlot(temp_plot(input$city_two, input$crime))
}
# the UI for the shiny app
library("shiny")
library("shinythemes")
background <- tabPanel(
"Background",
titlePanel("Project Information"),
mainPanel(
h2("Background Info"),
p("Crime rate is not a constant, straight line. Just like most",
" phenomena, crime fluctuates. One day may break record highs,",
" the next may break record lows. Therefore, in an effort to",
" minimize crime, one must understand the factors behind its rise",
" and fall. Toning in on weather patterns and its effect on crime",
" rate will provide more understanding behind crime deterrences.",
" The more crime deterrences are understood, the more we can do to",
" prevent crime from happening."),
h2("Research Questions"),
p("At what temperature does crime rise and fall?"),
p("Which types of crimes are most impacted by weather?"),
p("Which cities have the largest correlation between weather and crime")
)
)
visualize_one <- tabPanel(
"Weather and Crime Map",
fluidRow(
column(4,
h2("What this means"),
p("This map shows the chosen city and its geographical location. ",
"In addition, the type of weather is selected (or a temperature). ",
"Once the user toggles the preferences, a map showing infringements",
"in the location is shown. The number of markers indicates how much ",
"crime occurred under those conditions.")
),
column(5,
h2("Crime Hot Spots"),
leafletOutput("leaf_map"),
),
column(3,
radioButtons(
inputId = "city",
label = "Select a City",
choices = c("Seattle", "Denver", "Chicago", "Austin", "Boston")
),
radioButtons(
inputId = "weather",
label = "Type of Weather",
choices = c("None", "Rain", "Thunder", "Wind", "Snow")
),
sliderInput(
inputId = "temperature",
label = paste("Select the Max Temperature (only applies when ",
"\"None\" is selected)"),
min = -10,
max = 110,
value = 60
)
)
)
)
visualize_two <- tabPanel(
"Correlations",
fluidRow(
column(4,
h2("What this means"),
p("This visualization shows the average temperatures for each",
"month from the chosen city. We will then show the number of",
"crime infringements for each month depending on the chosen",
"crime type. Any correlation between temperature and crime type",
"will be evident on this graph.")
),
column(5,
h2("Temperature vs Crime"),
plotOutput("temp_plot")
),
column(3,
radioButtons(
inputId = "city_two",
label = "Select a City",
choices = c("Seattle", "Denver", "Chicago", "Austin", "Boston")
),
selectInput(
inputId = "crime",
label = "Select a crime type",
choices = c("Assault", "Robbery", "Homicide")
)
)
)
)
conclusion <- tabPanel(
"Conclusion",
titlePanel("The Results"),
p("Here is what we found...")
)
tech <- tabPanel(
"The Tech",
titlePanel("About the Tech"),
p("Information about the tech that we used...")
)
about_us <- tabPanel(
"About Us",
h3("Bradley Wilson"),
p("Bradley did this and this and this..."),
h3("Ashni Shah"),
p("Ash did this and this and this..."),
h3("Allesandra Quevedo"),
p("Allesandra did this and this and this...")
)
my_ui <- navbarPage(theme = shinytheme("superhero"),
"Skyfall",
background,
visualize_one,
visualize_two,
conclusion,
tech,
about_us
)
runApp()
